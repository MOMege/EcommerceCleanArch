// <auto-generated />
using System;
using Ecommerce.infrastructure.Presistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecommerce.infrastructure.Migrations
{
    [DbContext(typeof(DBContextApplication))]
    [Migration("20240930192824_Intial")]
    partial class Intial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECOMMERCE.DOMAIN.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "cat1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "cat2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "cat3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "cat4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "cat5"
                        },
                        new
                        {
                            Id = 6,
                            Name = "cat6"
                        },
                        new
                        {
                            Id = 7,
                            Name = "cat7"
                        },
                        new
                        {
                            Id = 8,
                            Name = "cat8"
                        },
                        new
                        {
                            Id = 9,
                            Name = "cat9"
                        });
                });

            modelBuilder.Entity("ECOMMERCE.DOMAIN.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("ECOMMERCE.DOMAIN.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("TotalAmoun")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderDate = new DateTime(2024, 9, 30, 22, 28, 24, 761, DateTimeKind.Local).AddTicks(2326),
                            Status = 0,
                            TotalAmoun = 4.0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            OrderDate = new DateTime(2024, 9, 30, 22, 28, 24, 761, DateTimeKind.Local).AddTicks(2343),
                            Status = 0,
                            TotalAmoun = 3.0,
                            UserId = 8
                        },
                        new
                        {
                            Id = 3,
                            OrderDate = new DateTime(2024, 9, 30, 22, 28, 24, 761, DateTimeKind.Local).AddTicks(2346),
                            Status = 0,
                            TotalAmoun = 9.0,
                            UserId = 7
                        },
                        new
                        {
                            Id = 4,
                            OrderDate = new DateTime(2024, 9, 30, 22, 28, 24, 761, DateTimeKind.Local).AddTicks(2347),
                            Status = 0,
                            TotalAmoun = 33.0,
                            UserId = 7
                        },
                        new
                        {
                            Id = 5,
                            OrderDate = new DateTime(2024, 9, 30, 22, 28, 24, 761, DateTimeKind.Local).AddTicks(2348),
                            Status = 0,
                            TotalAmoun = 14.0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            OrderDate = new DateTime(2024, 9, 30, 22, 28, 24, 761, DateTimeKind.Local).AddTicks(2350),
                            Status = 0,
                            TotalAmoun = 19.0,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("ECOMMERCE.DOMAIN.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("ECOMMERCE.DOMAIN.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("ECOMMERCE.DOMAIN.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "mohamed@gmail.com",
                            FirstName = "mohamed",
                            Password = "11223"
                        },
                        new
                        {
                            Id = 2,
                            Email = "ali@outlook.com",
                            FirstName = "ali",
                            Password = "22344"
                        },
                        new
                        {
                            Id = 3,
                            Email = "ahmed@outlook.com",
                            FirstName = "ahmed",
                            Password = "22344"
                        },
                        new
                        {
                            Id = 4,
                            Email = "wael@outlook.com",
                            FirstName = "wael",
                            Password = "22344"
                        },
                        new
                        {
                            Id = 5,
                            Email = "ibrahim@outlook.com",
                            FirstName = "ibrahim",
                            Password = "22344"
                        },
                        new
                        {
                            Id = 6,
                            Email = "fouad@outlook.com",
                            FirstName = "fouad",
                            Password = "22344"
                        },
                        new
                        {
                            Id = 7,
                            Email = "modtafa@outlook.com",
                            FirstName = "mostafa",
                            Password = "22344"
                        },
                        new
                        {
                            Id = 8,
                            Email = "khedr@outlook.com",
                            FirstName = "khedr",
                            Password = "22344"
                        },
                        new
                        {
                            Id = 9,
                            Email = "hari@outlook.com",
                            FirstName = "hari",
                            Password = "22344"
                        });
                });

            modelBuilder.Entity("Ecommerce.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "electronics",
                            Name = "dell",
                            Price = 34500,
                            Stock = 20
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "electronics",
                            Name = "hp",
                            Price = 34500,
                            Stock = 14
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "electronics",
                            Name = "lenovo",
                            Price = 3344,
                            Stock = 12
                        });
                });

            modelBuilder.Entity("Ecommerce.Domain.Visa", b =>
                {
                    b.Property<int>("VisaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisaId"));

                    b.Property<double>("Cvv")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateOfExpired")
                        .HasColumnType("datetime2");

                    b.Property<string>("HolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("VisaId");

                    b.HasIndex("UserId");

                    b.ToTable("Visa");

                    b.HasData(
                        new
                        {
                            VisaId = 1,
                            Cvv = 0.0,
                            DateOfExpired = new DateTime(2024, 9, 30, 19, 28, 24, 761, DateTimeKind.Utc).AddTicks(2386),
                            HolderName = "oo HG",
                            UserId = 1
                        },
                        new
                        {
                            VisaId = 2,
                            Cvv = 0.0,
                            DateOfExpired = new DateTime(2024, 9, 30, 19, 28, 24, 761, DateTimeKind.Utc).AddTicks(2389),
                            HolderName = "gg HG",
                            UserId = 2
                        },
                        new
                        {
                            VisaId = 3,
                            Cvv = 0.0,
                            DateOfExpired = new DateTime(2024, 9, 30, 19, 28, 24, 761, DateTimeKind.Utc).AddTicks(2391),
                            HolderName = "kk HG",
                            UserId = 3
                        },
                        new
                        {
                            VisaId = 4,
                            Cvv = 0.0,
                            DateOfExpired = new DateTime(2024, 9, 30, 19, 28, 24, 761, DateTimeKind.Utc).AddTicks(2392),
                            HolderName = "ll HG",
                            UserId = 1
                        },
                        new
                        {
                            VisaId = 5,
                            Cvv = 0.0,
                            DateOfExpired = new DateTime(2024, 9, 30, 19, 28, 24, 761, DateTimeKind.Utc).AddTicks(2393),
                            HolderName = "uu HG",
                            UserId = 5
                        });
                });

            modelBuilder.Entity("ECOMMERCE.DOMAIN.Image", b =>
                {
                    b.HasOne("Ecommerce.Domain.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECOMMERCE.DOMAIN.Order", b =>
                {
                    b.HasOne("ECOMMERCE.DOMAIN.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ECOMMERCE.DOMAIN.OrderItem", b =>
                {
                    b.HasOne("ECOMMERCE.DOMAIN.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.Domain.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECOMMERCE.DOMAIN.Review", b =>
                {
                    b.HasOne("Ecommerce.Domain.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECOMMERCE.DOMAIN.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ecommerce.Domain.Product", b =>
                {
                    b.HasOne("ECOMMERCE.DOMAIN.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ecommerce.Domain.Visa", b =>
                {
                    b.HasOne("ECOMMERCE.DOMAIN.User", "User")
                        .WithMany("Visa")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ECOMMERCE.DOMAIN.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ECOMMERCE.DOMAIN.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("ECOMMERCE.DOMAIN.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("Visa");
                });

            modelBuilder.Entity("Ecommerce.Domain.Product", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("OrderItems");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
